<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// datos del bloque
estado = ms_construyendo;
tipo = mf_arbusto;
estilo = irandom(1);

// temporizadores
reloj_creademuele = mq_creademuele * m_seg;

depth = -y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tipo &gt;= 0 {
    switch estado {
        case ms_construyendo:
            reloj_creademuele -= min(delta_time, m_dtlim);
            if reloj_creademuele &lt;= 0 {
                reloj_creademuele = mq_creademuele * m_seg;
                estado = ms_normal; } break;
        case ms_muerto:
            reloj_creademuele -= min(delta_time, m_dtlim);
            if reloj_creademuele &lt;= -m_escombro * m_seg {
                instance_destroy(); } break; } }
else if estado == ms_muerto {
    instance_destroy(); }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reloj_creademuele &gt; 0 and tipo &gt;= 0 {
    var paso = 0;
    if estado == ms_muerto {
        paso = 3 - ceil(reloj_creademuele / (0.333 * mq_creademuele * m_seg)); }
    else if estado == ms_construyendo {
        paso = ceil(reloj_creademuele / (0.333 * mq_creademuele * m_seg)) - 1; }
    switch tipo {
        case mf_arbusto:
            if estado == ms_normal {
                draw_sprite(d_decorado, 3 * estilo, x, y); }
            else {
                draw_sprite(d_decorado, 3 * estilo + paso, x, y); }
            break;
        case mf_roca:
            if estado == ms_normal {
                draw_sprite(d_decorado, 6, x, y); }
            else {
                draw_sprite(d_decorado, 6 + paso, x, y); }
            break; } }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
