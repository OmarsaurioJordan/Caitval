<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// coordenadas GUI
ww = 1024 * 2;
hh = 682 * 2;
display_set_gui_size(ww, hh);

// relojes
reloj_dobleclic = 0;
reloj_espera = 0;
reloj_cambio = 0;
reloj_parpadeo = 0;

// informacion dinamica de la GUI
sombreado = -1;
mienvio = mv_carta;
mivalor = 1;
miredaccion = "";
loggg = "";
hand_tx = -1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_visible[1] = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// relojes

if reloj_dobleclic != 0 {
    reloj_dobleclic -= min(delta_time, m_dtlim);
    if reloj_dobleclic &lt; 0 {
        reloj_dobleclic = 0; } }

if reloj_espera != 0 {
    reloj_espera -= min(delta_time, m_dtlim);
    if reloj_espera &lt; 0 {
        reloj_espera = 0; } }

reloj_parpadeo -= min(delta_time, m_dtlim);
if reloj_parpadeo &lt;= 0 {
    reloj_parpadeo = m_parpadeo * m_seg; }

if reloj_cambio != 0 {
    reloj_cambio -= min(delta_time, m_dtlim);
    if reloj_cambio &lt; 0 {
        instance_create(0, 0, o_turno);
        instance_destroy(); } }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// boton sombreado

sombreado = -1;
var mox = mouse_x * 0.5;
var moy = mouse_y * 0.5;
if point_distance(mox, moy, ww - 100, 100) &lt; m_radioboton {
    sombreado = mm_cerrar; }
else if point_distance(mox, moy, ww - 200, 100) &lt; m_radioboton {
    sombreado = mm_full; }
else if point_distance(mox, moy, ww - 300, 100) &lt; m_radioboton {
    sombreado = mm_sonido; }
else if point_distance(mox, moy, ww - 400, 100) &lt; m_radioboton {
    sombreado = mm_foto; }
else if mox &gt; ww * 0.49 and mox &lt; ww * (0.49 + 0.021 * 9) and
        moy &gt; hh * 0.07 - m_radioboton and moy &lt; hh * 0.07 + m_radioboton {
    sombreado = mm_continuar; }

if is_array(o_control.contactos) and sombreado == -1 {
    if point_distance(mox, moy, ww * 0.92, hh * 0.2) &lt; m_radioboton {
        sombreado = mm_envio_upup; }
    else if point_distance(mox, moy, ww * 0.96, hh * 0.2) &lt; m_radioboton {
        sombreado = mm_envio_up; }
    else if point_distance(mox, moy, ww * 0.92, hh * 0.95) &lt; m_radioboton {
        sombreado = mm_envio_downdown; }
    else if point_distance(mox, moy, ww * 0.96, hh * 0.95) &lt; m_radioboton {
        sombreado = mm_envio_down; }
    else if point_distance(mox, moy, ww * 0.45 + 362, hh * 0.25 + 45) &lt; m_radioboton * 1.6 {
        sombreado = mm_envio_num; }
    else if point_distance(mox, moy, ww * 0.74, hh * 0.77) &lt; m_radioboton * 1.8 {
        sombreado = mm_envio_send; }
    else {
        var n = 0;
        o_control.desf_cont = clamp(o_control.desf_cont, 0, array_height_2d(o_control.contactos) - 1);
        for (var i = o_control.desf_cont; i &gt; max(-1, o_control.desf_cont - m_len_lista); i--) {
            if point_distance(mox, moy, ww * 0.94, hh * (0.25 + 0.046 * n)) &lt; m_radioboton {
                sombreado = mm_envio_quien + i;
                break; }
            n++; }
        if sombreado == -1 {
            for (var i = 2; i &lt; 13; i++) {
                if point_distance(mox, moy, 100, hh * (0.18 + 0.06 * i)) &lt; m_radioboton * 1.4 {
                    sombreado = mm_envio_tipo + i; } } } } }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// comandos escritura

if reloj_espera == 0 and reloj_cambio == 0 {
    if keyboard_check(vk_control) {
        if keyboard_check_direct(ord('C')) {
            clipboard_set_text(miredaccion); }
        else if keyboard_check_direct(ord('V')) {
            miredaccion = s_letrasok(clipboard_get_text(), true, m_len_mensaje); } }
    else if keyboard_check(vk_anykey) {
        miredaccion = s_escribe(miredaccion, m_len_mensaje, true); } }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// comandos clic

view_visible[1] = false;
if mouse_check_button(mb_right) or keyboard_check(vk_tab) {
    view_xview[1] = clamp(mouse_x - view_wview[1] * 0.5,
        0, room_width - view_wview[1]);
    view_yview[1] = clamp(mouse_y - view_hview[1] * 0.5,
        0, room_height - view_hview[1]);
    view_visible[1] = true; }

else if mouse_check_button_pressed(mb_left) and reloj_espera == 0 and reloj_cambio == 0 {
    seleccion = -1;
    
    if is_array(o_control.contactos) {
        var n = 0;
        var cambio = -1;
        o_control.desf_cont = clamp(o_control.desf_cont, 0, array_height_2d(o_control.contactos) - 1);
        for (var i = o_control.desf_cont; i &gt; max(-1, o_control.desf_cont - m_len_lista); i--) {
            if sombreado == mm_envio_quien + i {
                audio_play_sound(am_boton, 99, false);
                cambio = i;
                break; }
            n++; }
        if cambio != -1 {
            for (var i = 0; i &lt; array_height_2d(o_control.contactos); i++) {
                o_control.contactos[i, 3] = false; }
            o_control.contactos[cambio, 3] = true; } }
    
    for (var i = 2; i &lt; 13; i++) {
        if sombreado == mm_envio_tipo + i {
            audio_play_sound(am_boton, 99, false);
            mienvio = i;
            mivalor = si_limivalor(mivalor, mienvio);
            break; } }
    
    switch sombreado {
        case mm_cerrar:
            if reloj_dobleclic == 0 {
                audio_play_sound(am_advertencia, 99, false);
                reloj_dobleclic = m_dobleclic * m_seg; }
            else {
                audio_play_sound(am_ok, 99, false);
                s_menu(); }
            break;
        
        case mm_full:
            audio_play_sound(am_boton, 99, false);
            window_set_fullscreen(!window_get_fullscreen());
            break;
        
        case mm_sonido:
            o_control.sonido++;
            if o_control.sonido &gt;= 3 {
                o_control.sonido = 0; }
            s_set_sonido();
            audio_play_sound(am_boton, 99, false);
            break;
        
        case mm_foto:
            screen_save("foto.png");
            if window_get_fullscreen() {
                audio_play_sound(am_advertencia, 99, false);
                window_set_fullscreen(false); }
            else {
                var aux = get_save_filename("PNG|*.png", "screenshot");
                if aux != "" {
                    audio_play_sound(am_foto, 99, false);
                    screen_save(aux); } }
            break;
        
        case mm_mnsj_up:
            audio_play_sound(am_cambio, 99, false);
            o_control.desf_cont++;
            break;
        
        case mm_mnsj_upup:
            audio_play_sound(am_cambio, 99, false);
            o_control.desf_cont += 10;
            break;
        
        case mm_mnsj_down:
            audio_play_sound(am_cambio, 99, false);
            o_control.desf_cont--;
            break;
        
        case mm_mnsj_downdown:
            audio_play_sound(am_cambio, 99, false);
            o_control.desf_cont -= 10;
            break;
        
        case mm_envio_send:
            if mienvio == mv_carta and miredaccion == "" {
                audio_play_sound(am_ok, 99, false);
                reloj_cambio = m_seg; }
            else {
                if si_requisitos(mienvio, mivalor, true) &lt;= o_control.dinero_actual and
                        mivalor &lt;= o_control.gente_actual - 4 {
                    reloj_espera = mh_espera * m_seg;
                    var aux = s_obtener_elegido(sombreado);
                    if aux != -1 {
                        var limpro = si_limitepro(mienvio, true);
                        var din = 0;
                        if mienvio == mv_regalo or mienvio == mv_venta {
                            din = mivalor * m_dolar; }
                        hand_tx = sh_envio_http(mienvio, o_control.contactos[aux, 1],
                            o_control.nombre_jugador, mivalor, limpro, din, miredaccion); }
                    else {
                        audio_play_sound(am_error, 99, false);
                        loggg = sd_discurso(15); } }
                else {
                    audio_play_sound(am_error, 99, false);
                    loggg = sd_discurso(13); } }
            break;
        
        case mm_envio_num:
            audio_play_sound(am_cambio, 99, false);
            switch mivalor {
                case 1: mivalor = 2; break;
                case 2: mivalor = 4; break;
                case 4: mivalor = 8; break;
                case 8: mivalor = 16; break;
                case 16:
                    var masss = si_masenvio() + o_control.espro;
                    if masss != 0 {
                        mivalor += masss;
                    }
                    else {
                        mivalor = 1;
                    }
                    break;
                default: mivalor = 1; break;
            }
            mivalor = si_limivalor(mivalor, mienvio);
            break;
        
        case mm_continuar:
            audio_play_sound(am_ok, 99, false);
            reloj_cambio = m_seg;
            break; } }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// respuesta envio
if ds_map_find_value(async_load, "id") == hand_tx {
    if ds_map_find_value(async_load, "status") == 0 {
        var aux = ds_map_find_value(async_load, "result");
        if string_count("|", aux) == 6 {
            var data = s_split(aux, "|", false);
            // si ocurre error
            if data[0] == "97" {
                audio_play_sound(am_error, 99, false);
                if data[3] == "0" {
                    loggg = sd_discurso(mm_error + real(data[3])) + data[6]; }
                else {
                    loggg = sd_discurso(mm_error + real(data[3])); } }
            // todo salio bien
            else if data[0] == "96" {
                audio_play_sound(am_ok, 99, false);
                loggg = sd_discurso(14);
                var el = s_obtener_elegido(sombreado);
                if el != -1 {
                    s_history(string(mivalor) + " " + sd_name_envio(mienvio) +
                        " -&gt; " + o_control.contactos[el, 1]);
                    s_agregar_relacion(o_control.contactos[el, 1], 2,
                        si_envirecep_biengen(mienvio, true),
                        si_envirecep_biengen(mienvio, false)); }
                su_enviados(mivalor);
                o_control.dinero_actual -= si_requisitos(mienvio, mivalor, true);
                o_control.envios_bien += si_envirecep_biengen(mienvio, true);
                o_control.envios_totales += si_envirecep_biengen(mienvio, false);
                reloj_cambio = m_seg; }
            // ocurrio error inesperado
            else {
                audio_play_sound(am_error, 99, false);
                loggg = sd_discurso(15);
                reloj_espera = m_seg; } }
        else {
            audio_play_sound(am_error, 99, false);
            loggg = sd_discurso(15); } } }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(mouse_check_button(mb_right) or keyboard_check(vk_tab)) {
// pinta la ficha superior izquierda con informacion del juego
sd_mis_estadisticas();

// pinta el titulo de la GUI
sd_set_texto(fa_center, fa_middle, d_letras_estilizadas);
sd_texto_c(ww * 0.57, hh * 0.13, 1, c_white, sd_discurso(20));

// botones generales
sd_cuadro(ww - 500, 0, 5, 2, 1, 1);
sd_boton(ww - 100, 100, d_general, 1, sombreado == mm_cerrar, 0.9);
sd_boton(ww - 200, 100, d_general, 2, sombreado == mm_full, 0.9);
sd_boton(ww - 300, 100, d_general, 3, sombreado == mm_sonido, 0.9);
sd_boton(ww - 400, 100, d_general, 4, sombreado == mm_foto, 0.9);

// pintar barra de ciclo o boton de continuar
draw_sprite_ext(d_ciclo, 2, ww * 0.44, hh * 0.07, 1, 1, 0, c_white, 1);
draw_sprite_ext(d_ciclo, 0, ww * 0.72, hh * 0.07, 1, 1, 0, c_white, 1);
if reloj_cambio == 0 {
    for (var i = 0; i &lt; 10; i++) {
        sd_boton(ww * (0.49 + i * 0.021), hh * 0.07, d_menu, 13, sombreado == mm_continuar, 1); } }

// dibujar listado de jugadores
if is_array(o_control.contactos) {
    if array_height_2d(o_control.contactos) &gt; m_len_lista {
        sd_boton(ww * 0.92, hh * 0.2, d_menu, 12, sombreado == mm_envio_upup, 1);
        sd_boton(ww * 0.96, hh * 0.2, d_menu, 11, sombreado == mm_envio_up, 1);
        sd_boton(ww * 0.92, hh * 0.95, d_menu, 10, sombreado == mm_envio_downdown, 1);
        sd_boton(ww * 0.96, hh * 0.95, d_menu, 9, sombreado == mm_envio_down, 1);
        o_control.desf_cont = clamp(o_control.desf_cont, m_len_lista - 1, array_height_2d(o_control.contactos) - 1); }
    else {
        o_control.desf_cont = array_height_2d(o_control.contactos) - 1; }
    draw_sprite_ext(d_menu, 2, ww * 0.99, hh * (0.25 + 0.046 * (m_len_lista - 1) *
        (1 - (o_control.desf_cont + 1) / array_height_2d(o_control.contactos))),
        0.5, 0.5, 0, c_white, 1);
    var n = 0;
    for (var i = o_control.desf_cont; i &gt; max(-1, o_control.desf_cont - m_len_lista); i--) {
        sd_subavatar(ww * 0.94, hh * (0.25 + 0.046 * n),
            d_avatar, o_control.contactos[i, 0], sombreado == mm_envio_quien + i or
            o_control.contactos[i, 3], 0.2);
        draw_sprite_ext(d_envios, si_icono_relacion(o_control.contactos[i, 4]), ww * 0.97,
            hh * (0.25 + 0.046 * n), 0.666, 0.666, 0, c_white, 1);
        n++; } }

// dibujar cosas referentes a enviar un mensaje
if is_array(o_control.contactos) {
    
    // dibujar carta a redactar
    var aux = array_height_2d(o_control.contactos) - 1;
    if sombreado &gt;= mm_envio_quien and sombreado &lt; mm_mm {
        aux = sombreado - mm_envio_quien; }
    else {
        for (var i = 0; i &lt; array_height_2d(o_control.contactos); i++) {
            if o_control.contactos[i, 3] {
                aux = i;
                break; } } }
    var pic = "";
    if reloj_parpadeo &lt; m_parpadeo * m_seg * 0.5 {
        pic = "|"; }
    aux = clamp(aux, 0, array_height_2d(o_control.contactos) - 1);
    sd_carta_redactable(ww * 0.45, hh * 0.25,
        o_control.contactos[aux, 0], o_control.contactos[aux, 1],
        mienvio, mivalor, miredaccion + pic, sombreado == mm_envio_num);
    
    // log y boton play
    sd_cuadro(ww * 0.15, hh * 0.76, 7, 3, 1, 1);
    sd_set_texto(fa_left, fa_middle, d_letras_estilizadas);
    if sombreado &gt; mm_envio_tipo and sombreado &lt; mm_envio_quien {
        sd_parrafo(ww * 0.15 + 80, hh * 0.76 + 150, 0.75, 750, sd_discurso(sombreado)); }
    else {
        sd_parrafo(ww * 0.15 + 80, hh * 0.76 + 150, 0.75, 750, "log: " + loggg); }
    sd_boton(ww * 0.74, hh * 0.77, d_play, 0, sombreado == mm_envio_send, 1.2);
    
    // requisitos de envio
    sd_cuadro(ww - 500, hh * 0.16, 3, 3, 1, 1);
    sd_texto(ww - 500 + 65, hh * 0.16 + 75, 0.8, sd_discurso(6));
    draw_sprite_ext(d_estadisticas, 1, ww - 500 + 80, hh * 0.16 + 140,
        0.5, 0.5, 0, c_white, 1);
    if si_requisitos(mienvio, mivalor, true) &lt;= o_control.dinero_actual {
        sd_texto(ww - 500 + 140, hh * 0.16 + 140, 0.8,
            string(si_requisitos(mienvio, mivalor, true))); }
    else {
        sd_texto_c(ww - 500 + 140, hh * 0.16 + 140, 0.8, c_red,
            string(si_requisitos(mienvio, mivalor, true))); }
    draw_sprite_ext(d_estadisticas, 0, ww - 500 + 80, hh * 0.16 + 210,
        0.5, 0.5, 0, c_white, 1);
    if mivalor &lt;= o_control.gente_actual - 4 {
        sd_texto(ww - 500 + 140, hh * 0.16 + 210, 0.8, string(mivalor)); }
    else {
        sd_texto_c(ww - 500 + 140, hh * 0.16 + 210, 0.8, c_red, string(mivalor)); }
    
    // dibujar tipos de envio posibles
    for (var i = 2; i &lt; 13; i++) {
        if i == mienvio {
            draw_sprite_ext(d_envios, i, 100, hh * (0.18 + 0.06 * i), 1.3, 1.3, 20, c_white, 0.666); }
        else {
            draw_sprite_ext(d_play, 1, 100, hh * (0.18 + 0.06 * i), 0.75, 0.75, 0, c_white, 1);
            sd_boton(100, hh * (0.18 + 0.06 * i), d_envios, i, sombreado == mm_envio_tipo + i, 1); } }
}

// opacar para salir al menu
if reloj_dobleclic != 0 {
    if sombreado == mm_cerrar {
        draw_set_alpha(0.333);
        draw_rectangle_colour(0, 0, ww, hh, c_black, c_black, c_black, c_black, false);
        draw_set_alpha(1); } }

// coordenadas debug posicion
if o_control.debug {
    sd_set_texto(fa_center, fa_bottom, d_letras_consolas);
    sd_texto_c(ww * 0.5, hh, 1, c_white,
        string(mouse_x * 0.5) + "," + string(mouse_y * 0.5) + "#" +
        string((mouse_x * 0.5) / ww) + "," + string((mouse_y * 0.5) / hh)); }
// mouse
draw_sprite(d_mouse, 0, mouse_x * 0.5, mouse_y * 0.5); }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
