<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// propiedades del juego general
version = "1.1.3";
servidor = "";
idioma = m_en;
sonido = m_musica;
tiempo_ciclo = 30;
debug = false;
// variable: idapp, se creara

// propiedades de la partida
nombre_archivo = "";
nombre_jugador = "";
avatar = irandom(m_avatares - 1);
desf_mnsj = 0;
desf_cont = 0;
micodigo = 0;
espro = 0;
menor = 1;
estavivo = true;

// est. dinero
dinero_actual = 0;
dinero_deuda = 0;
dinero_avaluo = 0;
dinero_riesgo = 0; // dinero_deuda / dinero_avaluo
prestamistas = noone; // nombre, deuda

// est. tiempo de partida
ciclo_edad = 0;
tiempo_edad = 0; // minutos de juego activo totales

// est. poblacion
gente_actual = 0;
gente_soporte = 0;
gente_record = 0;

// est. edificaciones
edificaciones_actual = 0;
edificaciones_pro = 0;
edificaciones_record = 0;
edificaciones_avance = 0; // edificaciones_pro / edificaciones_actual

// est. envios
contactos = noone; // avatar, nombre, influencia_tmp, seleccionado, recepciones_son
relaciones = noone; // nombre, influencia, recepciones_bien, recepciones_totales
envios_bien = 0;
envios_totales = 0;
envios_son = 0.5; // envios_bien / envios_totales
recepciones_bien = 0;
recepciones_totales = 0;
recepciones_son = 0.5; // recepciones_bien / recepciones_totales
miscartas = noone; // avatar, nombre, envio, cantidad, mensaje, dt_llegada, seleccionado
lascaritas = noone; // avatar, nombre

// reubicarse al centro y definir limites
x = room_width * 0.5;
y = room_height * 0.5 + 250;
r_mundo = room_height - y - 64;
c_mundo = room_width * 0.15;

// creara los otros objetos al inicio
s_set_ofihttp();
s_ini_general_ini();
instance_create(0, 0, o_residuos);
instance_create(0, 0, o_menu);
s_buscar_web_ini();
audio_channel_num(200);
audio_sound_gain(a_musica1, 0.8, 0);
audio_sound_gain(a_musica2, 0.8, 0);
s_set_sonido();

// revisar si hay actualizacion
newversion = false;
hand_rv = -1;
hand_aten = -1;
sh_actualizar(id);

// temporizadores del juego
reloj_atencion = 0;
reloj_edad = 0;
reloj_cuentas = 0;
reloj_influencia = 0;
reloj_idapp = m_seg;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_set_sonido();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// temporizadores maestros

// verificar que no haya otra instancia app
reloj_idapp -= delta_time;
if reloj_idapp &lt;= 0 {
    reloj_idapp = m_seg * 10;
    ini_open("configuracion.ini");
    var vidapp = real(ini_read_string("config", "idapp", "0"));
    ini_close();
    if vidapp != idapp {
        game_end();
        exit; } }

if !instance_exists(o_menu) {
    
    // medir tiempo que se lleva jugando
    if estavivo {
        reloj_edad += delta_time;
        if reloj_edad &gt; 60 * m_seg {
            reloj_edad -= 60 * m_seg;
            su_saledemolicion();
            tiempo_edad++; } }
    
    // disminuir efecto de influencia
    if estavivo {
        reloj_influencia -= min(delta_time, m_dtlim);
        if reloj_influencia &lt;= 0 {
            reloj_influencia = 69000 * m_seg;
            if is_array(relaciones) {
                for (var i = 0; i &lt; array_height_2d(relaciones); i++) {
                    relaciones[i, 1] *= 0.9; } } } }
    
    // actualizar muchas cosas
    reloj_cuentas -= min(delta_time, m_dtlim);
    if reloj_cuentas &lt;= 0 {
        reloj_cuentas = m_cuentas * m_seg;
        s_actualitodo();
        s_mochacabezas();
        s_graficas_est();
        s_liquidacion(); }
    
    // atencion al servidor http
    reloj_atencion -= min(delta_time, m_dtlim);
    if reloj_atencion &lt;= 0 {
        reloj_atencion = mh_ciclo * m_seg;
        randomize();
        // revisar cartas vencidas
        s_eliminacartas(m_vencecartas);
        // cosas extra que suceden cada tanto
        s_autociclo();
        // solicitud http
        if estavivo {
            hand_aten = sh_envio_http(98, "", nombre_jugador, tiempo_edad, ciclo_edad, "", ""); }
        s_savegame(); } }

// poner en modo debug
if keyboard_check_released(vk_f10) {
    debug = !debug;
    show_debug_overlay(debug); }
// otra opcion para tomar pantallazo
else if keyboard_check_released(vk_printscreen) {
    screen_save("foto.png");
    if window_get_fullscreen() {
        window_set_fullscreen(false); }
    else {
        var aux = get_save_filename("PNG|*.png", "screenshot");
        if aux != "" {
            screen_save(aux); } } }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sh_actualizacion(id, async_load);
s_recv_ofihttp(id, async_load);

// atencion
if ds_map_find_value(async_load, "id") == hand_aten and estavivo {
    if ds_map_find_value(async_load, "status") == 0 {
        var aux = ds_map_find_value(async_load, "result");
        if string_count("&lt;", aux) == 0 {
            var msjs = s_split(aux, "#", false);
            if is_array(msjs) {
                var data;
                for (var m = 0; m &lt; array_length_1d(msjs); m++) {
                    data = s_split(msjs[m], "|", false);
                    if is_array(data) {
                        if array_length_1d(data) == 7 {
                            sh_depurar(data[0], data[2],
                                data[3], data[4], data[5],
                                data[6]); } } } } } } }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(o_menu) {
    s_savegame();
    s_history("Sale de la partida"); }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
